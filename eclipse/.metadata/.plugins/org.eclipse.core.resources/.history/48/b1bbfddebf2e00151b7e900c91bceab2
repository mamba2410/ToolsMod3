package mamba2410.toolsmod3.item.tools;

import mamba2410.toolsmod3.util.IconHelper;
import mamba2410.toolsmod3.util.ToolHelper;
import net.minecraft.item.ItemAxe;
import net.minecraft.item.ItemStack;
import net.minecraft.util.IIcon;
import codechicken.nei.api.API;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

public class CustomAxe extends ItemAxe{
	
	String igname = "";
	String unlocalname;
	ToolMaterial mat;

	public CustomAxe(ToolMaterial mat) {
		super(mat);
		unlocalname = mat.name() + "Axe";
		setUnlocalizedName(unlocalname);
		//setTextureName("minecraft:iron_axe");
		//setCreativeTab(CreativeTabsHandler.modtab);
		this.mat = mat;
		igname = ToolHelper.getHeadNameFromToolMat(mat) + " Axe";
		
		registering(unlocalname, igname);
	}
	
	private void registering(String unlocalisedname, String igname){
		GameRegistry.registerItem(this, unlocalisedname);
		//LanguageRegistry.addName(this, unlocalisedname);
		LanguageRegistry.instance().addStringLocalization("item." + ToolHelper.getLocalFromName(ToolHelper.getHeadNameFromToolMat(mat)) + ".name", "en_US", igname);
	}
	
	@Override
	public String getUnlocalizedName(ItemStack par1ItemStack) {
		API.hideItem(par1ItemStack);
		return super.getUnlocalizedName(par1ItemStack);
	}
	
	@Override
    @SideOnly(Side.CLIENT)
    public IIcon getIcon(ItemStack stack, int pass){
		if(pass == 0){
			return IconHelper.getAxe(ToolHelper.getHeadNameFromToolMat(mat), "Head");
		} else {
			return IconHelper.getAxe(ToolHelper.getRodNameFromToolMat(mat), "Rod");
		}
	}
	
	@Override
	@SideOnly(Side.CLIENT)
	public boolean requiresMultipleRenderPasses() {
		return true;
	}
	
	@Override
	@SideOnly(Side.CLIENT)
	public final int getRenderPasses(int metadata) {
		return 2;
	}

}
